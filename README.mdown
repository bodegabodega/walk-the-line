# Walk the Line

I often find myself writing scripts that need to pick up a file and do a bit of processing on each line. Walk the Line is my attempt at creating a reusable object that does the dirty work.

## Example

```javascript
var WalkTheLine = require('walk-the-line');

// Create an instance
let wtl = new WalkTheLine('./path/to-your/file.txt');

/**
 * Create a before method if you want to do anything before you start parsing lines.
 *
 * The before method can recieve 2 optional parameters:
 * 1. count - The number of lines in the file
 * 2. done - If defined, call the done method when you're done doing async stuff
 */
wtl.before = function(count, done) {
	console.log(`Processing ${count} lines`);

	doSomethingAsync(function(){
		done();
	})
}

/**
 * Create a line method which will be called for each line of the file.
 *
 * The line method can recieve optional parameters:
 * 1. index - The zero-indexed number of the line being processed
 * 2. count - The number of lines in the file
 * 3. line - The content of the line
 * 4. done - If defined, call the done method when you're done doing async stuff
 */
wtl.line = function(index, count, line, done {
	console.log(`Processing line ${index} of ${count}`);

	doSomethingAsync(line, function(){
		done();
	})
}

/**
 * Create an after method if you want to do anything after you have processed the lines.
 * This method takes no parameters.
 */
wtl.after = function() { this.foo.should.equal('bar'); }

// Run it!
wtl.run();
```